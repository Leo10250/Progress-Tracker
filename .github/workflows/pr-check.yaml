# .github/workflows/pr-check.yml
permissions:
  contents: read
  issues: write
  pull-requests: write

name: PR Check

on:
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout
      - uses: actions/checkout@v4

      # 2) JDK & Gradle cache
      - uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: gradle

      # 3) Run Checkstyle
      - name: Run Checkstyle
        id: checkstyle
        shell: bash
        run: |
          set +e
          ./gradlew --no-daemon checkstyleMain checkstyleTest
          echo "checkstyle_exit=$?" >> "$GITHUB_OUTPUT"

      # 4) Build, unit-test
      - name: Build & test
        run: ./gradlew clean build --no-daemon

      # 5-6) Upload reports
      - name: Upload unit-test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/reports/tests/

      - name: Upload Checkstyle reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-reports
          path: |
            build/reports/checkstyle/*.html
            build/reports/checkstyle/*.xml

      # 7) Generate & capture coverage
      - name: Generate coverage and capture it
        id: coverage
        shell: bash
        run: |
          ./gradlew jacocoTestReport --no-daemon

          LINE_TAG=$(grep -oP '<counter[^>]*type="LINE"[^>]*/>' \
                     build/reports/jacoco/test/jacocoTestReport.xml | tail -1)
          MISSED=$(grep -oP 'missed="\K[0-9]+'  <<< "$LINE_TAG")
          COVERED=$(grep -oP 'covered="\K[0-9]+' <<< "$LINE_TAG")
          TOTAL=$((MISSED + COVERED))

          if [ "$TOTAL" -eq 0 ]; then
            PCT="0.00"
          else
            PCT=$(awk -v c="$COVERED" -v t="$TOTAL" \
                   'BEGIN { printf "%.2f", c*100/t }')
          fi

          echo "coverage=${PCT}" >> "$GITHUB_OUTPUT"
          echo "### Code coverage: ${PCT}%" >> "$GITHUB_STEP_SUMMARY"

      # 8) Update / create the PR comment
      - name: Post code-coverage to PR
        id: coverage_comment
        if: always() # run even if next step fails
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            <!-- code-coverage-comment -->
            ðŸ§ª **Code Coverage**
            Current code coverage is **${{ steps.coverage.outputs.coverage }}%**.

      # 9) Fail the build if coverage < 80 %
      - name: Enforce 80 % coverage threshold
        if: success() # proceed only if everything above succeeded
        shell: bash
        run: |
          cov=${{ steps.coverage.outputs.coverage }}
          if (( $(echo "$cov < 80" | bc -l) )); then
            echo "Code coverage ${cov}% is below the required 80%." >&2
            exit 1
          fi

      # 10) Fail if Checkstyle violations
      - name: Fail if Checkstyle failed
        if: steps.checkstyle.outputs.checkstyle_exit != '0'
        run: |
          echo "Checkstyle violations detected â€“ see the uploaded HTML report." >&2
          exit 1
